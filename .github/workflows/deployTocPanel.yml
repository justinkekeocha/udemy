name: Deploy Site on push
on:
  push:
    branches:
      - main
jobs:
  web-deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: none    

      - name: Cache Node modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-        

      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: ðŸ”¨ Build Project
        uses: actions/setup-node@v3
        with:
          node-version: 18
      -  run: |
          npm ci
          npm run build --if-present

      - name: ðŸ“‚ Sync files
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i --delete"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_PORT: 21098
          TARGET: "~/udemy.jaycode.dev/codebase"
          EXCLUDE: "/dist/, /node_modules/"


      #https://github.com/marketplace/actions/http-request-action
      - name: Make request to clear cache
        id: clearCache
        uses: fjogeleit/http-request-action@v1
        with:
          url: "https://udemy.jaycode.dev/production/cache"
          method: "GET"
      - name: Show Response
        run: |
          echo ${{ fromJson(steps.clearCache.outputs.response) }}
